<!DOCTYPE html>
<html lang="en">
	<meta charset="utf-8">
	<head>
		    <title>Read Text File</title>
		    <script src="../js/abcjs-basic-min.js" type="text/javascript"></script>
	</head>
	  
	<body>
		<input type="file" name="inputfile" id="inputfile" accept=".abc"> <br>

		<div id="contents"><h1>Contents</h1><p></p></div>
		<div id="titles"><h1>Title Index</h1><p></p></div>
			          
		<script type="text/javascript">
			document.getElementById('inputfile')
            	.addEventListener('change', function() {
		                  
		    var fr=new FileReader(), tb=null;
		    fr.onload=function(){
				var t = 2;
				var x = document.getElementById('titles');
				var px = x.parentNode; // container for the Tune divs
				var cz = document.getElementById('contents').lastChild;
				var tz = document.getElementById('titles').lastChild;
				tb = new ABCJS.TuneBook(fr.result);


				var tzs = []; // array for title index
				tb.tunes.forEach(function(tx) {
					// build Contents
					// console.log(tx.id+' '+tx.title);
					idstr = 'X_'+tx.id; // id string for this tune
					cz.appendChild(document.createTextNode(tx.id+'. '));
					a = document.createElement('a'); // links to tune
					a.innerText = tx.title;
					a.setAttribute("href", '#'+idstr);
					cz.appendChild(a)
					cz.appendChild(document.createElement('br'));
					lines = tx.abc.split('\n') // should stop after K: line
					// get all the titles in the tune
					titles = lines.filter(function(x){return x.startsWith('T:')}).map(function(x){return x.slice(2).trim()});
					// collect multiple titles for title index - should also find key
					tzs = tzs.concat(titles.map(function(x){ return {'id': tx.id, 'title': x}}));

					// create a <div> element for this tune
					n = document.createElement("div");
					n.setAttribute("id", idstr);
					px.append(n); // insert the <div=idstr> node
					ABCJS.renderAbc(idstr, tx.pure); // render the tune
				});

				// sort titles - should also order by .id as secondary key
				tzs.sort(function(x,y){ return (x.title<y.title)?-1:1 });

				// fill in the Title Index
				tzs.forEach(function(tx){
					tz.appendChild(document.createTextNode(tx.id+'. '));
					a = document.createElement('a');
					a.innerText = tx.title;
					a.setAttribute("href", '#X_'+tx.id);
					tz.appendChild(a)
					tz.appendChild(document.createElement('br'));
				});
			}
		                  
		    fr.readAsText(this.files[0]);
		    })
    	</script>
	</body>
	  
</html>
